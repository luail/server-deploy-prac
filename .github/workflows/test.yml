name: deploy to ec2 with jar

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v2

      - name: setup java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' #temurin은 자바 종류중의 하나

      - name: build jar
        working-directory: .
        run: |
          chmod 777 ./gradlew  
          ./gradlew bootJar
      #리눅스이므로 권한설정

      - name: copy jar to ec2 inst1
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.EC2_HOST}} #내 ec2 DNS주소로.
          username: ubuntu
          #          pemkey를 통해 해당 인스턴스에 접근
          key: ${{secrets.EC2_PEMKEY}}
          source: "./build/libs/*.jar" #경로는 루트경로 바로 아래임 지금.
          target: "/home/ubuntu"
      - name: install java and run jar on ec2 inst1
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ubuntu
          #          pemkey를 통해 해당 인스턴스에 접근
          key: ${{secrets.EC2_PEMKEY}}
          script: |
            if ! type java > /dev/null; then
              sudo apt-get update && sudo apt-get install openjdk-17-jdk -y
            else
              echo "java is already installed"
            fi
            sudo killall java
            #실행하는부분은 여기
            nohup java -jar /home/ubuntu/build/libs/*.jar \    
            --spring.redis.host=${{secrets.REDIS_HOST}} \
            --spring.datasource.url=jdbc:mariadb://${{secrets.DB_HOST}}:3306/order_system \
            --spring.datasource.username=admin \
            --spring.datasource.password=${{secrets.DB_PW}} \
            --cloud.aws.credentials.access-key=${{secrets.AWS_KEY}} \
            --cloud.aws.credentials.secret-key=${{secrets.AWS_SECRET}} > /home/ubuntu/app.log 2>&1 &
